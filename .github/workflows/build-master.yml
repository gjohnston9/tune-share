# Run lint/test jobs in parallel for every pull request to master.
# This workflow is also used in deploy.yml

name: build-master

on:
  pull_request:
    branches: [ master ]
  # Allows this workflow to be referenced in other workflows
  workflow_call:

env:
  PYTHON_VERSION: 3.8
jobs:
  python-lint:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Cache ~/.cache/pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint with flake8
      run: |
        # Stop the build if there are lint errors. Uses the configs from setup.cfg
        flake8
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 --exit-zero --max-complexity=10 --max-line-length=127

    - name: Run mypy type checker
      # Uses settings from setup.cfg
      run: mypy

  python-unit:
    runs-on: ubuntu-latest
    env:
      FIREBASE_BINARY_VERSION: v10.0.1
    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Cache ~/.cache/pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Cache Firebase files
      id: cache-firebase
      uses: actions/cache@v2
      with:
        path: |
          ~/firebase
          ~/.cache/firebase
        key: ${{ runner.os }}-firebase-${{ env.FIREBASE_BINARY_VERSION }}

    - name: Download Firebase binary
      if: steps.cache-firebase.outputs.cache-hit != 'true'
      run: |
        wget -O ~/firebase https://github.com/firebase/firebase-tools/releases/download/${{ env.FIREBASE_BINARY_VERSION }}/firebase-tools-linux
        chmod +x ~/firebase

    - name: Run Firestore emulator in background
      # Sleep after starting the emulator so that it has a chance to start up
      # and print some info.
      run: ~/firebase emulators:start --only firestore --project dev & sleep 4

    - name: Test with pytest
      run: PYTHONPATH=. pytest

  js-lint:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Cache ~/.npm
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Set up Node
      uses: actions/setup-node@v2

    - name: Install dependencies
      run: npm install

    - name: Lint with eslint
      run: npm run lint
