# Runs two jobs in parallel for every push or pull_request to master.
# One job runs Python lint and tests. The other job runs lint on the project's JavaScript files.
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: build-master

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  python-build:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: "3.8"

    - name: Cache ~/.cache/pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint with flake8
      run: |
        # Stop the build if there are lint errors. Uses the configs from setup.cfg
        flake8
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 --exit-zero --max-complexity=10 --max-line-length=127

    - name: Test with pytest
      run: PYTHONPATH=. pytest

  node-build:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Cache ~/.npm
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Set up Node
      uses: actions/setup-node@v2

    - name: Install dependencies
      run: npm install

    - name: Lint with eslint
      run: npm run lint
